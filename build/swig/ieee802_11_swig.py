# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ieee802_11_swig', [dirname(__file__)])
        except ImportError:
            import _ieee802_11_swig
            return _ieee802_11_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_ieee802_11_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ieee802_11_swig = swig_import_helper()
    del swig_import_helper
else:
    import _ieee802_11_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    """Proxy of C++ swig::SwigPyIterator class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _ieee802_11_swig.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self):
        """value(SwigPyIterator self) -> PyObject *"""
        return _ieee802_11_swig.SwigPyIterator_value(self)

    def incr(self, n=1):
        """incr(SwigPyIterator self, size_t n=1) -> SwigPyIterator"""
        return _ieee802_11_swig.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        """decr(SwigPyIterator self, size_t n=1) -> SwigPyIterator"""
        return _ieee802_11_swig.SwigPyIterator_decr(self, n)

    def distance(self, *args, **kwargs):
        """distance(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t"""
        return _ieee802_11_swig.SwigPyIterator_distance(self, *args, **kwargs)

    def equal(self, *args, **kwargs):
        """equal(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _ieee802_11_swig.SwigPyIterator_equal(self, *args, **kwargs)

    def copy(self):
        """copy(SwigPyIterator self) -> SwigPyIterator"""
        return _ieee802_11_swig.SwigPyIterator_copy(self)

    def next(self):
        """next(SwigPyIterator self) -> PyObject *"""
        return _ieee802_11_swig.SwigPyIterator_next(self)

    def __next__(self):
        """__next__(SwigPyIterator self) -> PyObject *"""
        return _ieee802_11_swig.SwigPyIterator___next__(self)

    def previous(self):
        """previous(SwigPyIterator self) -> PyObject *"""
        return _ieee802_11_swig.SwigPyIterator_previous(self)

    def advance(self, *args, **kwargs):
        """advance(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _ieee802_11_swig.SwigPyIterator_advance(self, *args, **kwargs)

    def __eq__(self, *args, **kwargs):
        """__eq__(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _ieee802_11_swig.SwigPyIterator___eq__(self, *args, **kwargs)

    def __ne__(self, *args, **kwargs):
        """__ne__(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _ieee802_11_swig.SwigPyIterator___ne__(self, *args, **kwargs)

    def __iadd__(self, *args, **kwargs):
        """__iadd__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _ieee802_11_swig.SwigPyIterator___iadd__(self, *args, **kwargs)

    def __isub__(self, *args, **kwargs):
        """__isub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _ieee802_11_swig.SwigPyIterator___isub__(self, *args, **kwargs)

    def __add__(self, *args, **kwargs):
        """__add__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _ieee802_11_swig.SwigPyIterator___add__(self, *args, **kwargs)

    def __sub__(self, *args):
        """
        __sub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator
        __sub__(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t
        """
        return _ieee802_11_swig.SwigPyIterator___sub__(self, *args)

    def __iter__(self): return self
SwigPyIterator_swigregister = _ieee802_11_swig.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class ofdm_decode_mac(object):
    """Proxy of C++ gr::ieee802_11::ofdm_decode_mac class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(debug=False):
        """make(bool debug=False) -> ofdm_decode_mac_sptr"""
        return _ieee802_11_swig.ofdm_decode_mac_make(debug)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_decode_mac
    __del__ = lambda self : None;
ofdm_decode_mac_swigregister = _ieee802_11_swig.ofdm_decode_mac_swigregister
ofdm_decode_mac_swigregister(ofdm_decode_mac)

def ofdm_decode_mac_make(debug=False):
  """ofdm_decode_mac_make(bool debug=False) -> ofdm_decode_mac_sptr"""
  return _ieee802_11_swig.ofdm_decode_mac_make(debug)

class ofdm_decode_mac_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_decode_mac)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_decode_mac)> self) -> ofdm_decode_mac_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_decode_mac)> self, ofdm_decode_mac p) -> ofdm_decode_mac_sptr
        """
        this = _ieee802_11_swig.new_ofdm_decode_mac_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_decode_mac_sptr self) -> ofdm_decode_mac"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_decode_mac_sptr
    __del__ = lambda self : None;
    def make(self, debug=False):
        """make(ofdm_decode_mac_sptr self, bool debug=False) -> ofdm_decode_mac_sptr"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_make(self, debug)

    def history(self):
        """history(ofdm_decode_mac_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_decode_mac_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_decode_mac_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_decode_mac_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_start(self)

    def stop(self):
        """stop(ofdm_decode_mac_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_decode_mac_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_decode_mac_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_decode_mac_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_decode_mac_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_decode_mac_sptr self)"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_decode_mac_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_decode_mac_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_decode_mac_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_decode_mac_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_decode_mac_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_decode_mac_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_decode_mac_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_decode_mac_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_decode_mac_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_decode_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_decode_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_decode_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_decode_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_decode_mac_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_decode_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_decode_mac_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_decode_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_decode_mac_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_decode_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_decode_mac_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_decode_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_decode_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_decode_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_decode_mac_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_decode_mac_sptr self)"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_decode_mac_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_decode_mac_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_decode_mac_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_decode_mac_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_decode_mac_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_decode_mac_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_decode_mac_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_decode_mac_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_decode_mac_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_decode_mac_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_decode_mac_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_decode_mac_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_decode_mac_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_decode_mac_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_decode_mac_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_decode_mac_sptr_message_ports_out(self)

ofdm_decode_mac_sptr_swigregister = _ieee802_11_swig.ofdm_decode_mac_sptr_swigregister
ofdm_decode_mac_sptr_swigregister(ofdm_decode_mac_sptr)

ofdm_decode_mac_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_decode_mac = ofdm_decode_mac.make;

class ofdm_decode_signal(object):
    """Proxy of C++ gr::ieee802_11::ofdm_decode_signal class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(debug=False):
        """make(bool debug=False) -> ofdm_decode_signal_sptr"""
        return _ieee802_11_swig.ofdm_decode_signal_make(debug)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_decode_signal
    __del__ = lambda self : None;
ofdm_decode_signal_swigregister = _ieee802_11_swig.ofdm_decode_signal_swigregister
ofdm_decode_signal_swigregister(ofdm_decode_signal)

def ofdm_decode_signal_make(debug=False):
  """ofdm_decode_signal_make(bool debug=False) -> ofdm_decode_signal_sptr"""
  return _ieee802_11_swig.ofdm_decode_signal_make(debug)

class ofdm_decode_signal_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_decode_signal)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_decode_signal)> self) -> ofdm_decode_signal_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_decode_signal)> self, ofdm_decode_signal p) -> ofdm_decode_signal_sptr
        """
        this = _ieee802_11_swig.new_ofdm_decode_signal_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_decode_signal_sptr self) -> ofdm_decode_signal"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_decode_signal_sptr
    __del__ = lambda self : None;
    def make(self, debug=False):
        """make(ofdm_decode_signal_sptr self, bool debug=False) -> ofdm_decode_signal_sptr"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_make(self, debug)

    def history(self):
        """history(ofdm_decode_signal_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_decode_signal_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_decode_signal_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_decode_signal_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_start(self)

    def stop(self):
        """stop(ofdm_decode_signal_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_decode_signal_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_decode_signal_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_decode_signal_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_decode_signal_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_decode_signal_sptr self)"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_decode_signal_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_decode_signal_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_decode_signal_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_decode_signal_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_decode_signal_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_decode_signal_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_decode_signal_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_decode_signal_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_decode_signal_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_decode_signal_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_decode_signal_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_decode_signal_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_decode_signal_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_decode_signal_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_decode_signal_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_decode_signal_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_decode_signal_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_decode_signal_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_decode_signal_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_decode_signal_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_decode_signal_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_decode_signal_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_decode_signal_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_decode_signal_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_decode_signal_sptr self)"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_decode_signal_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_decode_signal_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_decode_signal_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_decode_signal_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_decode_signal_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_decode_signal_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_decode_signal_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_decode_signal_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_decode_signal_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_decode_signal_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_decode_signal_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_decode_signal_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_decode_signal_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_decode_signal_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_decode_signal_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_decode_signal_sptr_message_ports_out(self)

ofdm_decode_signal_sptr_swigregister = _ieee802_11_swig.ofdm_decode_signal_sptr_swigregister
ofdm_decode_signal_sptr_swigregister(ofdm_decode_signal_sptr)

ofdm_decode_signal_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_decode_signal = ofdm_decode_signal.make;

class ofdm_equalize_symbols(object):
    """Proxy of C++ gr::ieee802_11::ofdm_equalize_symbols class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(debug=False):
        """make(bool debug=False) -> ofdm_equalize_symbols_sptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_make(debug)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_equalize_symbols
    __del__ = lambda self : None;
ofdm_equalize_symbols_swigregister = _ieee802_11_swig.ofdm_equalize_symbols_swigregister
ofdm_equalize_symbols_swigregister(ofdm_equalize_symbols)

def ofdm_equalize_symbols_make(debug=False):
  """ofdm_equalize_symbols_make(bool debug=False) -> ofdm_equalize_symbols_sptr"""
  return _ieee802_11_swig.ofdm_equalize_symbols_make(debug)

class ofdm_equalize_symbols_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_equalize_symbols)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_equalize_symbols)> self) -> ofdm_equalize_symbols_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_equalize_symbols)> self, ofdm_equalize_symbols p) -> ofdm_equalize_symbols_sptr
        """
        this = _ieee802_11_swig.new_ofdm_equalize_symbols_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_equalize_symbols_sptr self) -> ofdm_equalize_symbols"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_equalize_symbols_sptr
    __del__ = lambda self : None;
    def make(self, debug=False):
        """make(ofdm_equalize_symbols_sptr self, bool debug=False) -> ofdm_equalize_symbols_sptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_make(self, debug)

    def history(self):
        """history(ofdm_equalize_symbols_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_equalize_symbols_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_equalize_symbols_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_equalize_symbols_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_start(self)

    def stop(self):
        """stop(ofdm_equalize_symbols_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_equalize_symbols_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_equalize_symbols_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_equalize_symbols_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_equalize_symbols_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_equalize_symbols_sptr self)"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_equalize_symbols_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_equalize_symbols_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_equalize_symbols_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_equalize_symbols_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_equalize_symbols_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_equalize_symbols_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_equalize_symbols_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_equalize_symbols_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_equalize_symbols_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_equalize_symbols_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_equalize_symbols_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_equalize_symbols_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_equalize_symbols_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_equalize_symbols_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_equalize_symbols_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_equalize_symbols_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_equalize_symbols_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_equalize_symbols_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_equalize_symbols_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_equalize_symbols_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_equalize_symbols_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_equalize_symbols_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_equalize_symbols_sptr self)"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_equalize_symbols_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_equalize_symbols_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_equalize_symbols_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_equalize_symbols_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_equalize_symbols_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_equalize_symbols_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_equalize_symbols_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_equalize_symbols_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_equalize_symbols_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_equalize_symbols_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_equalize_symbols_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_equalize_symbols_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_equalize_symbols_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_equalize_symbols_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_equalize_symbols_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_equalize_symbols_sptr_message_ports_out(self)

ofdm_equalize_symbols_sptr_swigregister = _ieee802_11_swig.ofdm_equalize_symbols_sptr_swigregister
ofdm_equalize_symbols_sptr_swigregister(ofdm_equalize_symbols_sptr)

ofdm_equalize_symbols_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_equalize_symbols = ofdm_equalize_symbols.make;

class ofdm_parse_mac(object):
    """Proxy of C++ gr::ieee802_11::ofdm_parse_mac class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(bool debug) -> ofdm_parse_mac_sptr"""
        return _ieee802_11_swig.ofdm_parse_mac_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_parse_mac
    __del__ = lambda self : None;
ofdm_parse_mac_swigregister = _ieee802_11_swig.ofdm_parse_mac_swigregister
ofdm_parse_mac_swigregister(ofdm_parse_mac)

def ofdm_parse_mac_make(*args, **kwargs):
  """ofdm_parse_mac_make(bool debug) -> ofdm_parse_mac_sptr"""
  return _ieee802_11_swig.ofdm_parse_mac_make(*args, **kwargs)

class ofdm_parse_mac_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_parse_mac)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_parse_mac)> self) -> ofdm_parse_mac_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_parse_mac)> self, ofdm_parse_mac p) -> ofdm_parse_mac_sptr
        """
        this = _ieee802_11_swig.new_ofdm_parse_mac_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_parse_mac_sptr self) -> ofdm_parse_mac"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_parse_mac_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_parse_mac_sptr self, bool debug) -> ofdm_parse_mac_sptr"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_parse_mac_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_parse_mac_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_parse_mac_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_parse_mac_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_start(self)

    def stop(self):
        """stop(ofdm_parse_mac_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_parse_mac_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_parse_mac_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_parse_mac_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_parse_mac_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_parse_mac_sptr self)"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_parse_mac_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_parse_mac_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_parse_mac_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_parse_mac_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_parse_mac_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_parse_mac_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_parse_mac_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_parse_mac_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_parse_mac_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_parse_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_parse_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_parse_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_parse_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_parse_mac_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_parse_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_parse_mac_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_parse_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_parse_mac_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_parse_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_parse_mac_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_parse_mac_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_parse_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_parse_mac_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_parse_mac_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_parse_mac_sptr self)"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_parse_mac_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_parse_mac_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_parse_mac_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_parse_mac_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_parse_mac_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_parse_mac_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_parse_mac_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_parse_mac_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_parse_mac_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_parse_mac_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_parse_mac_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_parse_mac_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_parse_mac_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_parse_mac_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_parse_mac_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_parse_mac_sptr_message_ports_out(self)

ofdm_parse_mac_sptr_swigregister = _ieee802_11_swig.ofdm_parse_mac_sptr_swigregister
ofdm_parse_mac_sptr_swigregister(ofdm_parse_mac_sptr)

ofdm_parse_mac_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_parse_mac = ofdm_parse_mac.make;

class ofdm_sync_long(object):
    """Proxy of C++ gr::ieee802_11::ofdm_sync_long class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(unsigned int sync_length, unsigned int freq_est, bool debug=False) -> ofdm_sync_long_sptr"""
        return _ieee802_11_swig.ofdm_sync_long_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_sync_long
    __del__ = lambda self : None;
ofdm_sync_long_swigregister = _ieee802_11_swig.ofdm_sync_long_swigregister
ofdm_sync_long_swigregister(ofdm_sync_long)

def ofdm_sync_long_make(*args, **kwargs):
  """ofdm_sync_long_make(unsigned int sync_length, unsigned int freq_est, bool debug=False) -> ofdm_sync_long_sptr"""
  return _ieee802_11_swig.ofdm_sync_long_make(*args, **kwargs)

class ofdm_sync_long_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_sync_long)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_sync_long)> self) -> ofdm_sync_long_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_sync_long)> self, ofdm_sync_long p) -> ofdm_sync_long_sptr
        """
        this = _ieee802_11_swig.new_ofdm_sync_long_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_sync_long_sptr self) -> ofdm_sync_long"""
        return _ieee802_11_swig.ofdm_sync_long_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_sync_long_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_sync_long_sptr self, unsigned int sync_length, unsigned int freq_est, bool debug=False) -> ofdm_sync_long_sptr"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_sync_long_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_sync_long_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_sync_long_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_sync_long_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_start(self)

    def stop(self):
        """stop(ofdm_sync_long_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_sync_long_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_sync_long_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_sync_long_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_sync_long_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_sync_long_sptr self)"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_sync_long_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_sync_long_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_sync_long_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_sync_long_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_sync_long_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_sync_long_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_sync_long_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_sync_long_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_sync_long_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_sync_long_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_sync_long_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_sync_long_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_sync_long_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_sync_long_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_sync_long_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_sync_long_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_sync_long_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_sync_long_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_sync_long_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_sync_long_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_sync_long_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_sync_long_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_sync_long_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_sync_long_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_sync_long_sptr self)"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_sync_long_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_sync_long_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_sync_long_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_sync_long_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_sync_long_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_sync_long_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_sync_long_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_sync_long_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_sync_long_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_sync_long_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_sync_long_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_sync_long_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_sync_long_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_sync_long_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_sync_long_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_sync_long_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_sync_long_sptr_message_ports_out(self)

ofdm_sync_long_sptr_swigregister = _ieee802_11_swig.ofdm_sync_long_sptr_swigregister
ofdm_sync_long_sptr_swigregister(ofdm_sync_long_sptr)

ofdm_sync_long_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_sync_long = ofdm_sync_long.make;

class ofdm_sync_short(object):
    """Proxy of C++ gr::ieee802_11::ofdm_sync_short class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(double threshold, unsigned int max_samples, unsigned int min_plateau, bool debug=False) -> ofdm_sync_short_sptr"""
        return _ieee802_11_swig.ofdm_sync_short_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_sync_short
    __del__ = lambda self : None;
ofdm_sync_short_swigregister = _ieee802_11_swig.ofdm_sync_short_swigregister
ofdm_sync_short_swigregister(ofdm_sync_short)

def ofdm_sync_short_make(*args, **kwargs):
  """ofdm_sync_short_make(double threshold, unsigned int max_samples, unsigned int min_plateau, bool debug=False) -> ofdm_sync_short_sptr"""
  return _ieee802_11_swig.ofdm_sync_short_make(*args, **kwargs)

class ofdm_sync_short_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_sync_short)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_sync_short)> self) -> ofdm_sync_short_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_sync_short)> self, ofdm_sync_short p) -> ofdm_sync_short_sptr
        """
        this = _ieee802_11_swig.new_ofdm_sync_short_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_sync_short_sptr self) -> ofdm_sync_short"""
        return _ieee802_11_swig.ofdm_sync_short_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_sync_short_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_sync_short_sptr self, double threshold, unsigned int max_samples, unsigned int min_plateau, bool debug=False) -> ofdm_sync_short_sptr"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_sync_short_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_sync_short_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_sync_short_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_sync_short_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_start(self)

    def stop(self):
        """stop(ofdm_sync_short_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_sync_short_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_sync_short_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_sync_short_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_sync_short_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_sync_short_sptr self)"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_sync_short_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_sync_short_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_sync_short_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_sync_short_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_sync_short_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_sync_short_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_sync_short_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_sync_short_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_sync_short_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_sync_short_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_sync_short_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_sync_short_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_sync_short_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_sync_short_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_sync_short_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_sync_short_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_sync_short_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_sync_short_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_sync_short_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_sync_short_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_sync_short_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_sync_short_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_sync_short_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_sync_short_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_sync_short_sptr self)"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_sync_short_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_sync_short_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_sync_short_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_sync_short_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_sync_short_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_sync_short_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_sync_short_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_sync_short_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_sync_short_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_sync_short_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_sync_short_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_sync_short_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_sync_short_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_sync_short_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_sync_short_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_sync_short_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_sync_short_sptr_message_ports_out(self)

ofdm_sync_short_sptr_swigregister = _ieee802_11_swig.ofdm_sync_short_sptr_swigregister
ofdm_sync_short_sptr_swigregister(ofdm_sync_short_sptr)

ofdm_sync_short_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_sync_short = ofdm_sync_short.make;

class ofdm_symbol_mapper(object):
    """Proxy of C++ gr::ieee802_11::ofdm_symbol_mapper class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(std::vector< gr_complex,std::allocator< gr_complex > > const & constellation, unsigned int msgq_limit, 
            unsigned int occupied_carriers, unsigned int fft_length, 
            bool debug=False) -> ofdm_symbol_mapper_sptr
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_make(*args, **kwargs)

    make = staticmethod(make)
    def msgq(self):
        """msgq(ofdm_symbol_mapper self) -> gr_msg_queue_sptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_msgq(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_symbol_mapper
    __del__ = lambda self : None;
ofdm_symbol_mapper_swigregister = _ieee802_11_swig.ofdm_symbol_mapper_swigregister
ofdm_symbol_mapper_swigregister(ofdm_symbol_mapper)

def ofdm_symbol_mapper_make(*args, **kwargs):
  """
    ofdm_symbol_mapper_make(std::vector< gr_complex,std::allocator< gr_complex > > const & constellation, unsigned int msgq_limit, 
        unsigned int occupied_carriers, unsigned int fft_length, 
        bool debug=False) -> ofdm_symbol_mapper_sptr
    """
  return _ieee802_11_swig.ofdm_symbol_mapper_make(*args, **kwargs)

class ofdm_symbol_mapper_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_symbol_mapper)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_symbol_mapper)> self) -> ofdm_symbol_mapper_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_symbol_mapper)> self, ofdm_symbol_mapper p) -> ofdm_symbol_mapper_sptr
        """
        this = _ieee802_11_swig.new_ofdm_symbol_mapper_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_symbol_mapper_sptr self) -> ofdm_symbol_mapper"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_symbol_mapper_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(ofdm_symbol_mapper_sptr self, std::vector< gr_complex,std::allocator< gr_complex > > const & constellation, unsigned int msgq_limit, 
            unsigned int occupied_carriers, unsigned int fft_length, 
            bool debug=False) -> ofdm_symbol_mapper_sptr
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_make(self, *args, **kwargs)

    def msgq(self):
        """msgq(ofdm_symbol_mapper_sptr self) -> gr_msg_queue_sptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_msgq(self)

    def history(self):
        """history(ofdm_symbol_mapper_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_symbol_mapper_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_symbol_mapper_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_symbol_mapper_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_start(self)

    def stop(self):
        """stop(ofdm_symbol_mapper_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_symbol_mapper_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_symbol_mapper_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_symbol_mapper_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_symbol_mapper_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_symbol_mapper_sptr self)"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_symbol_mapper_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_symbol_mapper_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_symbol_mapper_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_symbol_mapper_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_symbol_mapper_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_symbol_mapper_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_symbol_mapper_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_symbol_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_symbol_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_symbol_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_symbol_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_symbol_mapper_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_symbol_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_symbol_mapper_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_symbol_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_symbol_mapper_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_symbol_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_symbol_mapper_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_symbol_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_symbol_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_symbol_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_symbol_mapper_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_symbol_mapper_sptr self)"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_symbol_mapper_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_symbol_mapper_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_symbol_mapper_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_symbol_mapper_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_symbol_mapper_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_symbol_mapper_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_symbol_mapper_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_symbol_mapper_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_symbol_mapper_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_symbol_mapper_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_symbol_mapper_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_symbol_mapper_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_symbol_mapper_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_symbol_mapper_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_symbol_mapper_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_symbol_mapper_sptr_message_ports_out(self)

ofdm_symbol_mapper_sptr_swigregister = _ieee802_11_swig.ofdm_symbol_mapper_sptr_swigregister
ofdm_symbol_mapper_sptr_swigregister(ofdm_symbol_mapper_sptr)

ofdm_symbol_mapper_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_symbol_mapper = ofdm_symbol_mapper.make;

class ofdm_pilot_insert(object):
    """Proxy of C++ gr::ieee802_11::ofdm_pilot_insert class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int tones, bool debug=False) -> ofdm_pilot_insert_sptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_pilot_insert
    __del__ = lambda self : None;
ofdm_pilot_insert_swigregister = _ieee802_11_swig.ofdm_pilot_insert_swigregister
ofdm_pilot_insert_swigregister(ofdm_pilot_insert)

def ofdm_pilot_insert_make(*args, **kwargs):
  """ofdm_pilot_insert_make(int tones, bool debug=False) -> ofdm_pilot_insert_sptr"""
  return _ieee802_11_swig.ofdm_pilot_insert_make(*args, **kwargs)

class ofdm_pilot_insert_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_pilot_insert)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_pilot_insert)> self) -> ofdm_pilot_insert_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_pilot_insert)> self, ofdm_pilot_insert p) -> ofdm_pilot_insert_sptr
        """
        this = _ieee802_11_swig.new_ofdm_pilot_insert_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_pilot_insert_sptr self) -> ofdm_pilot_insert"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_pilot_insert_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_pilot_insert_sptr self, int tones, bool debug=False) -> ofdm_pilot_insert_sptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_pilot_insert_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_pilot_insert_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_pilot_insert_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_pilot_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_start(self)

    def stop(self):
        """stop(ofdm_pilot_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_pilot_insert_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_pilot_insert_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_pilot_insert_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_pilot_insert_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_pilot_insert_sptr self)"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_pilot_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_pilot_insert_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_pilot_insert_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_pilot_insert_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_pilot_insert_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_pilot_insert_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_pilot_insert_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_pilot_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_pilot_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_pilot_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_pilot_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_pilot_insert_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_pilot_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_pilot_insert_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_pilot_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_pilot_insert_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_pilot_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_pilot_insert_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_pilot_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_pilot_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_pilot_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_pilot_insert_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_pilot_insert_sptr self)"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_pilot_insert_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_pilot_insert_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_pilot_insert_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_pilot_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_pilot_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_pilot_insert_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_pilot_insert_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_pilot_insert_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_pilot_insert_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_pilot_insert_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_pilot_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_pilot_insert_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_pilot_insert_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_pilot_insert_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_pilot_insert_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_pilot_insert_sptr_message_ports_out(self)

ofdm_pilot_insert_sptr_swigregister = _ieee802_11_swig.ofdm_pilot_insert_sptr_swigregister
ofdm_pilot_insert_sptr_swigregister(ofdm_pilot_insert_sptr)

ofdm_pilot_insert_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_pilot_insert = ofdm_pilot_insert.make;

class ofdm_carrier_mapper(object):
    """Proxy of C++ gr::ieee802_11::ofdm_carrier_mapper class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_size, int tones, bool debug=False) -> ofdm_carrier_mapper_sptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_carrier_mapper
    __del__ = lambda self : None;
ofdm_carrier_mapper_swigregister = _ieee802_11_swig.ofdm_carrier_mapper_swigregister
ofdm_carrier_mapper_swigregister(ofdm_carrier_mapper)

def ofdm_carrier_mapper_make(*args, **kwargs):
  """ofdm_carrier_mapper_make(int fft_size, int tones, bool debug=False) -> ofdm_carrier_mapper_sptr"""
  return _ieee802_11_swig.ofdm_carrier_mapper_make(*args, **kwargs)

class ofdm_carrier_mapper_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_carrier_mapper)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_carrier_mapper)> self) -> ofdm_carrier_mapper_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_carrier_mapper)> self, ofdm_carrier_mapper p) -> ofdm_carrier_mapper_sptr
        """
        this = _ieee802_11_swig.new_ofdm_carrier_mapper_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_carrier_mapper_sptr self) -> ofdm_carrier_mapper"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_carrier_mapper_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_carrier_mapper_sptr self, int fft_size, int tones, bool debug=False) -> ofdm_carrier_mapper_sptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_carrier_mapper_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_carrier_mapper_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_carrier_mapper_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_carrier_mapper_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_start(self)

    def stop(self):
        """stop(ofdm_carrier_mapper_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_carrier_mapper_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_carrier_mapper_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_carrier_mapper_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_carrier_mapper_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_carrier_mapper_sptr self)"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_carrier_mapper_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_carrier_mapper_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_carrier_mapper_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_carrier_mapper_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_carrier_mapper_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_carrier_mapper_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_carrier_mapper_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_carrier_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_carrier_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_carrier_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_carrier_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_carrier_mapper_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_carrier_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_carrier_mapper_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_carrier_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_carrier_mapper_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_carrier_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_carrier_mapper_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_carrier_mapper_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_carrier_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_carrier_mapper_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_carrier_mapper_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_carrier_mapper_sptr self)"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_carrier_mapper_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_carrier_mapper_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_carrier_mapper_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_carrier_mapper_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_carrier_mapper_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_carrier_mapper_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_carrier_mapper_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_carrier_mapper_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_carrier_mapper_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_carrier_mapper_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_carrier_mapper_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_carrier_mapper_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_carrier_mapper_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_carrier_mapper_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_carrier_mapper_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_carrier_mapper_sptr_message_ports_out(self)

ofdm_carrier_mapper_sptr_swigregister = _ieee802_11_swig.ofdm_carrier_mapper_sptr_swigregister
ofdm_carrier_mapper_sptr_swigregister(ofdm_carrier_mapper_sptr)

ofdm_carrier_mapper_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_carrier_mapper = ofdm_carrier_mapper.make;

class ofdm_preamble_insert(object):
    """Proxy of C++ gr::ieee802_11::ofdm_preamble_insert class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int symbol_length, int N_symbols, std::vector< std::vector< gr_complex,std::allocator< gr_complex > >,std::allocator< std::vector< gr_complex,std::allocator< gr_complex > > > > const & preamble, 
            bool debug=False) -> ofdm_preamble_insert_sptr
        """
        return _ieee802_11_swig.ofdm_preamble_insert_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_preamble_insert
    __del__ = lambda self : None;
ofdm_preamble_insert_swigregister = _ieee802_11_swig.ofdm_preamble_insert_swigregister
ofdm_preamble_insert_swigregister(ofdm_preamble_insert)

def ofdm_preamble_insert_make(*args, **kwargs):
  """
    ofdm_preamble_insert_make(int symbol_length, int N_symbols, std::vector< std::vector< gr_complex,std::allocator< gr_complex > >,std::allocator< std::vector< gr_complex,std::allocator< gr_complex > > > > const & preamble, 
        bool debug=False) -> ofdm_preamble_insert_sptr
    """
  return _ieee802_11_swig.ofdm_preamble_insert_make(*args, **kwargs)

class ofdm_preamble_insert_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_preamble_insert)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_preamble_insert)> self) -> ofdm_preamble_insert_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_preamble_insert)> self, ofdm_preamble_insert p) -> ofdm_preamble_insert_sptr
        """
        this = _ieee802_11_swig.new_ofdm_preamble_insert_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_preamble_insert_sptr self) -> ofdm_preamble_insert"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_preamble_insert_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(ofdm_preamble_insert_sptr self, int symbol_length, int N_symbols, std::vector< std::vector< gr_complex,std::allocator< gr_complex > >,std::allocator< std::vector< gr_complex,std::allocator< gr_complex > > > > const & preamble, 
            bool debug=False) -> ofdm_preamble_insert_sptr
        """
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_preamble_insert_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_preamble_insert_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_preamble_insert_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_preamble_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_start(self)

    def stop(self):
        """stop(ofdm_preamble_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_preamble_insert_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_preamble_insert_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_preamble_insert_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_preamble_insert_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_preamble_insert_sptr self)"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_preamble_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_preamble_insert_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_preamble_insert_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_preamble_insert_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_preamble_insert_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_preamble_insert_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_preamble_insert_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_preamble_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_preamble_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_preamble_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_preamble_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_preamble_insert_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_preamble_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_preamble_insert_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_preamble_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_preamble_insert_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_preamble_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_preamble_insert_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_preamble_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_preamble_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_preamble_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_preamble_insert_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_preamble_insert_sptr self)"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_preamble_insert_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_preamble_insert_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_preamble_insert_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_preamble_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_preamble_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_preamble_insert_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_preamble_insert_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_preamble_insert_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_preamble_insert_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_preamble_insert_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_preamble_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_preamble_insert_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_preamble_insert_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_preamble_insert_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_preamble_insert_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_preamble_insert_sptr_message_ports_out(self)

ofdm_preamble_insert_sptr_swigregister = _ieee802_11_swig.ofdm_preamble_insert_sptr_swigregister
ofdm_preamble_insert_sptr_swigregister(ofdm_preamble_insert_sptr)

ofdm_preamble_insert_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_preamble_insert = ofdm_preamble_insert.make;

class ofdm_zerogap_insert(object):
    """Proxy of C++ gr::ieee802_11::ofdm_zerogap_insert class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int symbol_length, int N_symbols, std::vector< std::vector< gr_complex,std::allocator< gr_complex > >,std::allocator< std::vector< gr_complex,std::allocator< gr_complex > > > > const & zerogap, 
            bool debug=False) -> ofdm_zerogap_insert_sptr
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_zerogap_insert
    __del__ = lambda self : None;
ofdm_zerogap_insert_swigregister = _ieee802_11_swig.ofdm_zerogap_insert_swigregister
ofdm_zerogap_insert_swigregister(ofdm_zerogap_insert)

def ofdm_zerogap_insert_make(*args, **kwargs):
  """
    ofdm_zerogap_insert_make(int symbol_length, int N_symbols, std::vector< std::vector< gr_complex,std::allocator< gr_complex > >,std::allocator< std::vector< gr_complex,std::allocator< gr_complex > > > > const & zerogap, 
        bool debug=False) -> ofdm_zerogap_insert_sptr
    """
  return _ieee802_11_swig.ofdm_zerogap_insert_make(*args, **kwargs)

class ofdm_zerogap_insert_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_zerogap_insert)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_zerogap_insert)> self) -> ofdm_zerogap_insert_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_zerogap_insert)> self, ofdm_zerogap_insert p) -> ofdm_zerogap_insert_sptr
        """
        this = _ieee802_11_swig.new_ofdm_zerogap_insert_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_zerogap_insert_sptr self) -> ofdm_zerogap_insert"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_zerogap_insert_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(ofdm_zerogap_insert_sptr self, int symbol_length, int N_symbols, std::vector< std::vector< gr_complex,std::allocator< gr_complex > >,std::allocator< std::vector< gr_complex,std::allocator< gr_complex > > > > const & zerogap, 
            bool debug=False) -> ofdm_zerogap_insert_sptr
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_zerogap_insert_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_zerogap_insert_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_zerogap_insert_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_zerogap_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_start(self)

    def stop(self):
        """stop(ofdm_zerogap_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_zerogap_insert_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_zerogap_insert_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_zerogap_insert_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_zerogap_insert_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_zerogap_insert_sptr self)"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_zerogap_insert_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_zerogap_insert_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_zerogap_insert_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_zerogap_insert_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_zerogap_insert_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_zerogap_insert_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_zerogap_insert_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_zerogap_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_zerogap_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_zerogap_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_zerogap_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_zerogap_insert_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_zerogap_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_zerogap_insert_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_zerogap_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_zerogap_insert_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_zerogap_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_zerogap_insert_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_zerogap_insert_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_zerogap_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_zerogap_insert_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_zerogap_insert_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_zerogap_insert_sptr self)"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_zerogap_insert_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_zerogap_insert_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_zerogap_insert_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_zerogap_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_zerogap_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_zerogap_insert_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_zerogap_insert_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_zerogap_insert_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_zerogap_insert_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_zerogap_insert_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_zerogap_insert_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_zerogap_insert_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_zerogap_insert_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_zerogap_insert_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_zerogap_insert_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_zerogap_insert_sptr_message_ports_out(self)

ofdm_zerogap_insert_sptr_swigregister = _ieee802_11_swig.ofdm_zerogap_insert_sptr_swigregister
ofdm_zerogap_insert_sptr_swigregister(ofdm_zerogap_insert_sptr)

ofdm_zerogap_insert_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_zerogap_insert = ofdm_zerogap_insert.make;

class ofdm_symbol_repeater(object):
    """Proxy of C++ gr::ieee802_11::ofdm_symbol_repeater class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int symbol_length, int repetition, int N_symbols, bool debug=False) -> ofdm_symbol_repeater_sptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_symbol_repeater
    __del__ = lambda self : None;
ofdm_symbol_repeater_swigregister = _ieee802_11_swig.ofdm_symbol_repeater_swigregister
ofdm_symbol_repeater_swigregister(ofdm_symbol_repeater)

def ofdm_symbol_repeater_make(*args, **kwargs):
  """ofdm_symbol_repeater_make(int symbol_length, int repetition, int N_symbols, bool debug=False) -> ofdm_symbol_repeater_sptr"""
  return _ieee802_11_swig.ofdm_symbol_repeater_make(*args, **kwargs)

class ofdm_symbol_repeater_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_11::ofdm_symbol_repeater)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_symbol_repeater)> self) -> ofdm_symbol_repeater_sptr
        __init__(boost::shared_ptr<(gr::ieee802_11::ofdm_symbol_repeater)> self, ofdm_symbol_repeater p) -> ofdm_symbol_repeater_sptr
        """
        this = _ieee802_11_swig.new_ofdm_symbol_repeater_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_symbol_repeater_sptr self) -> ofdm_symbol_repeater"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr___deref__(self)

    __swig_destroy__ = _ieee802_11_swig.delete_ofdm_symbol_repeater_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_symbol_repeater_sptr self, int symbol_length, int repetition, int N_symbols, bool debug=False) -> ofdm_symbol_repeater_sptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_symbol_repeater_sptr self) -> unsigned int"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_history(self)

    def output_multiple(self):
        """output_multiple(ofdm_symbol_repeater_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_symbol_repeater_sptr self) -> double"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_symbol_repeater_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_start(self)

    def stop(self):
        """stop(ofdm_symbol_repeater_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_symbol_repeater_sptr self, unsigned int which_input) -> uint64_t"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_symbol_repeater_sptr self, unsigned int which_output) -> uint64_t"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_symbol_repeater_sptr self) -> int"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_symbol_repeater_sptr self, int m)"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_symbol_repeater_sptr self)"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_symbol_repeater_sptr self) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_symbol_repeater_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_symbol_repeater_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_symbol_repeater_sptr self, int port, long max_output_buffer)
        """
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_symbol_repeater_sptr self, int i) -> long"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_symbol_repeater_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_symbol_repeater_sptr self, int port, long min_output_buffer)
        """
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_symbol_repeater_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_symbol_repeater_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_symbol_repeater_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_symbol_repeater_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_symbol_repeater_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_symbol_repeater_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_symbol_repeater_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_symbol_repeater_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_symbol_repeater_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_symbol_repeater_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_symbol_repeater_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_symbol_repeater_sptr self) -> std::vector< float,std::allocator< float > >
        """
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_symbol_repeater_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_symbol_repeater_sptr self) -> float"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_symbol_repeater_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_symbol_repeater_sptr self)"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_symbol_repeater_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_processor_affinity(self)

    def detail(self):
        """detail(ofdm_symbol_repeater_sptr self) -> gr_block_detail_sptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(ofdm_symbol_repeater_sptr self, gr_block_detail_sptr detail)"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(ofdm_symbol_repeater_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_symbol_repeater_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_symbol_repeater_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_symbol_repeater_sptr self) -> gr_io_signature_sptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_symbol_repeater_sptr self) -> long"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_symbol_repeater_sptr self) -> gr_basic_block_sptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_symbol_repeater_sptr self, int ninputs, int noutputs) -> bool"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_symbol_repeater_sptr self) -> std::string"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_symbol_repeater_sptr self, std::string name)"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_symbol_repeater_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_symbol_repeater_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_symbol_repeater_sptr self) -> swig_int_ptr"""
        return _ieee802_11_swig.ofdm_symbol_repeater_sptr_message_ports_out(self)

ofdm_symbol_repeater_sptr_swigregister = _ieee802_11_swig.ofdm_symbol_repeater_sptr_swigregister
ofdm_symbol_repeater_sptr_swigregister(ofdm_symbol_repeater_sptr)

ofdm_symbol_repeater_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_symbol_repeater = ofdm_symbol_repeater.make;


def update_crc32(*args, **kwargs):
  """update_crc32(unsigned int crc, std::string const buf) -> unsigned int"""
  return _ieee802_11_swig.update_crc32(*args, **kwargs)

def crc32(*args, **kwargs):
  """crc32(std::string const buf) -> unsigned int"""
  return _ieee802_11_swig.crc32(*args, **kwargs)


